import majordomo;

String metaTypeSimpleName(Object o) : o.metaType.name.replaceAll("majordomo::", "");

String assemblyClass(Extension ext) : "M" + ext.metaTypeSimpleName() + "Assembly";

Actor actor(Action action) : 
	FloatAction.isInstance(action) ? ((FloatAction) action).actor : ((BooleanAction) action).actor;
	
Object actorValue(Action action) : 
	FloatAction.isInstance(action) ? ((FloatAction) action).value : ((BooleanAction) action).value;
	
Sensor sensor(Condition cond) : 
	FloatCondition.isInstance(cond) ? ((FloatCondition) cond).sensor : ((BooleanCondition) cond).sensor;
	
Object conditionValue(Condition cond) : 
	FloatCondition.isInstance(cond) ? ((FloatCondition) cond).value : ((BooleanCondition) cond).value;
	
String comperator(Condition cond) : 
	LesserOrEqualFloatCondition.isInstance(cond) ? "<=" : (GreaterOrEqualFloatCondition.isInstance(cond) ? ">=" : "==");
	
Extendable ctx(Extension ext) : Sensor.isInstance(ext) ? ((Sensor) ext).ctx : ((Actor) ext).ctx;
	
String scopeName(Extension ext) :
	"m." + (House.isInstance(ext.ctx()) ? "" : ((Room) ext.ctx()).name + ".") + ext.name;
	
String ruleString(Rule rule) :
	rule.conditions.collect(e|e.sensor().scopeName() + " " + e.comperator() + " " + e.conditionValue()).toString(" & ") + 
	" -> " + rule.actions.collect(e|e.actor().scopeName() + ": " + e.actorValue()).toString(", ");