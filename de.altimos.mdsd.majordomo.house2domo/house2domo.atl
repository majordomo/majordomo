-- @nsURI House=http://House2/1.0
-- @nsURI Majordomo=http://mdsd.altimos.de/majordomo/1.0

module house2domo;
create OUT : Majordomo from IN : House;

-- Unused input:
--   House.name (our house has no name)
--   EqualCondition.valuecond (we don't support float equals since it's analog)
--   Condition.sensor
--   Action.actor
--   TemperatureSensor.temp
--   TwilightSwitch.active
--   RainSensor.active

rule House2Domo {
	from
		i : House!House
	to
		house : Majordomo!House (
			sensors <- House!Sensor.allInstances()->select(s | s.isLocatedIn = i),
			actors <- House!Actor.allInstances()->select(a | a.isLocatedIn = i)
		),
		majordomo : Majordomo!Majordomo (
			house <- house,
			rooms <- i.rooms,
			rules <- i.controlRules
		)
}

rule Room2Room {
	from
		i : House!Room
	to
		o : Majordomo!Room (
			name <- i.name,
			sensors <- House!Sensor.allInstances()->select(s | s.isLocatedIn = i),
			actors <- House!Actor.allInstances()->select(a | a.isLocatedIn = i)
		)
}

rule ControlRule2Rule {
	from
		i : House!ControlRule
	to
		o : Majordomo!Rule (
			conditions <- Sequence{i.condition},
			actions <- Sequence{i.action}
		)
}

rule EqualCond2BoolCond {
	from
		i : House!EqualCondition
	to
		o : Majordomo!BooleanCondition (
			value <- i.boolcond
		)
}

rule LessThanCond2LesserFloatCond {
	from
		i : House!LessThanCondition
	to
		o : Majordomo!LesserFloatCondition (
			value <- i.threshold
		)
}

rule GreaterThanCond2GreaterFloatCond {
	from
		i : House!GreaterThanCondition
	to
		o : Majordomo!GreaterFloatCondition (
			value <- i.threshold
		)
}

rule BooleanAction2BooleanAction {
	from
		i : House!BooleanAction
	to
		o : Majordomo!BooleanAction (
			value <- i.switchTo
		)
}

rule ValueAction2FloatAction {
	from
		i : House!ValueAction
	to
		o : Majordomo!FloatAction (
			value <- i.switchToValue
		)
}

rule Temperature2TemperatureSensor {
	from
		i : House!TemperatureSensor
	to
		o : Majordomo!TemperatureSensor (
			name <- i.name
		)
}

rule Twilight2LightSensor {
	from
		i : House!TwilightSwitch
	to
		o : Majordomo!LightSensor (
			name <- i.name
		)
}

rule Rain2RainSensor {
	from
		i : House!RainSensor
	to
		o : Majordomo!RainSensor (
			name <- i.name
		)
}

rule Boiler2Radiator {
	from
		i : House!Boiler
	to
		o : Majordomo!RadiatorActor (
			name <- i.name
		)
}

rule RollerBlind2Roller {
	from
		i : House!RollerBlind
	to
		o : Majordomo!RollerActor (
			name <- i.name
		)
}

rule Lamp2Lamp {
	from
		i : House!Lamp
	to
		o : Majordomo!LampActor (
			name <- i.name
		)
}
