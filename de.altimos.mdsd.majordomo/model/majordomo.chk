import majordomo;
extension majordomo;

context Majordomo WARNING "Majordomo wants a house to dominate.":
	this.house != null;
	
context Majordomo WARNING "Majordomo knows no rooms. He's really sad.":
	!this.rooms.isEmpty;
	
context Actor WARNING this.metaType.name + " does not have a ctx.": this.ctx != null;
context Sensor WARNING this.metaType.name + " does not have a ctx.": this.ctx != null;

context Actor ERROR "Cannot mount "+this.metaType.name+" at "+this.ctx.metaType.name+".":
	(RoomMountable.isInstance(this) && Room.isInstance(this.ctx)) ||
	(HouseMountable.isInstance(this) && House.isInstance(this.ctx));
	
context Sensor ERROR "Cannot mount "+this.metaType.name+" at "+this.ctx.metaType.name+".":
	(RoomMountable.isInstance(this) && Room.isInstance(this.ctx)) ||
	(HouseMountable.isInstance(this) && House.isInstance(this.ctx));

context FloatAction ERROR this.metaType.name + " must have an actor.": this.actor != null;
context BooleanAction ERROR this.metaType.name + " must have an actor.": this.actor != null;
	
// Names not empty
context Majordomo ERROR this.metaType.name + " must have a name.": this.name != null;
context Room ERROR this.metaType.name + " must have a name.": this.name != null;
context Extension ERROR this.metaType.name + " must have a name.": this.name != null;
context PreparedStatement ERROR this.metaType.name + " must have a name.": this.name != null;
context PreparedActionSet ERROR this.metaType.name + " must have a name.": this.name != null;
context PreparedValue ERROR this.metaType.name + " must have a name.": this.name != null;
	
// Unique names within specific contexts or global
context Sensor ERROR this.metaType.name + " must have a unique name.": 
	!this.ctx.sensors.exists(e|e.name == this.name && e != this);
context Actor ERROR this.metaType.name + " must have a unique name.": 
	!this.ctx.actors.exists(e|e.name == this.name && e != this);
context PreparedStatement ERROR this.metaType.name + " must have a unique name.":
	!this.ctx.preparedStatements.exists(e|e.name == this.name && e != this);
context PreparedActionSet ERROR this.metaType.name + " must have a unique name.":
	!this.ctx.preparedActionSets.exists(e|e.name == this.name && e != this);
context PreparedValue ERROR this.metaType.name + " must have a unique name.":
	!this.ctx.preparedActionSets.exists(e|e.name == this.name && e != this);
	
// Recursion detection of PreparedStatement, PreparedActionSet, PreparedValue
context PreparedStatement ERROR this.metaType.name + " cannot contain recursive cycles.":
	!this.hasRecursiveReferences();
context PreparedActionSet ERROR this.metaType.name + " cannot contain recursive cycles.":
	!this.hasRecursiveReferences();
context PreparedValue ERROR this.metaType.name + " cannot contain recursive cycles.":
	!this.hasRecursiveReferences();

// Statements
context BinaryOperation ERROR this.metaType.name + " must have two operants.": this.left != null && this.right != null;
