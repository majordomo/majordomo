import majordomo;

context Majordomo WARNING
	"Majordomo wants a house to dominate.":
	this.house != null;
	
context Majordomo WARNING
	"Majordomo knows no rooms. He's really sad.":
	!this.rooms.isEmpty;
	
context Actor WARNING "Does not have a ctx.": this.ctx != null;
context Sensor WARNING "Does not have a ctx.": this.ctx != null;

context Extension WARNING "Is room mountable.": !this.metaType.isInstance(RoomMountable);
context Extension WARNING "Is house mountable.": !this.metaType.isInstance(HouseMountable);

context Actor ERROR
	"Cannot mount "+this.metaType.name+" at "+this.ctx.metaType.name+".":
	(this.metaType.isInstance(RoomMountable) && this.ctx.metaType.isInstance(Room)) ||
	(this.metaType.isInstance(HouseMountable) && this.ctx.metaType.isInstance(House));
	
context Sensor ERROR
	"Cannot mount "+this.metaType.name+" at "+this.ctx.metaType.name+".":
	(this.metaType.isInstance(RoomMountable) && this.ctx.metaType.isInstance(Room)) ||
	(this.metaType.isInstance(HouseMountable) && this.ctx.metaType.isInstance(House));

context IntegerCondition ERROR
	"Must have a sensor.": this.sensor != null;
	
context FloatCondition ERROR
	"Must have a sensor.": this.sensor != null;
	
context BooleanCondition ERROR
	"Must have a sensor.": this.sensor != null;
	
context IntegerAction ERROR
	"Must have an actor.": this.actor != null;
	
context FloatAction ERROR
	"Must have an actor.": this.actor != null;
	
context BooleanAction ERROR
	"Must have an actor.": this.actor != null;
	
context Rule ERROR
	"Must have at least one condition.": this.conditions.size > 0;
	
context Rule ERROR
	"Must have at least one action.": this.actions.size > 0;
	
context Sensor ERROR
	"Must have a unique name.": this.ctx.sensors.exists(e|e.name == name);
	
context Actor ERROR
	"Must have a unique name.": this.ctx.sensors.exists(e|e.name == name);

	